{"ast":null,"code":"class RHSFile {\n  constructor(path) {\n    console.log(\"loading \" + path);\n    this.filestream = null; //Test\n\n    var rawFile = new XMLHttpRequest();\n    var localPath = \"http://localhost:3001/sample/\" + path;\n    /*\r\n    rawFile.onreadystatechange = function ()\r\n    {\r\n        if(rawFile.readyState === 4)\r\n        {\r\n            if(rawFile.status === 200 || rawFile.status == 0)\r\n            {\r\n                var reader = new FileReader();\r\n                \r\n                reader.onload = function(e){\r\n                    console.log(e.target.result);\r\n                };\r\n                reader.readAsBinaryString(rawFile.response);\r\n            }\r\n              rawFile.send(null);\r\n        }\r\n        else{\r\n            alert('Failed to read file ' + path);\r\n        }\r\n    }\r\n    */\n\n    rawFile.open(\"GET\", localPath, true);\n    rawFile.onload = this.onLoad;\n    rawFile.onerror = this.onError;\n    rawFile.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    rawFile.send(null); //reader.readAsBinaryString(\"intan_save_210107_151441.rhs\");\n  }\n\n  onLoad(e) {\n    if (this.readyState === 4) {\n      if (this.status === 200 || this.status === 0) {\n        /*\r\n        var reader = new FileReader();\r\n        \r\n        reader.onload = function(e){\r\n            console.log(e.target.result);\r\n        };\r\n        reader.readAsBinaryString(this.response);\r\n        */\n        filestream = this.responseText;\n      }\n    } else {\n      alert('Failed to read file');\n    }\n  }\n\n  onError(e) {\n    console.log('Error : ' + this.statusText);\n  }\n\n  getByte(index) {\n    return filestream.charCodeAt(index) & 0xff;\n  }\n\n}\n\nexport default RHSFile;","map":{"version":3,"sources":["C:/Users/tank6/Desktop/React/brainwave_webviewer/src/pages/RHSFile.js"],"names":["RHSFile","constructor","path","console","log","filestream","rawFile","XMLHttpRequest","localPath","open","onload","onLoad","onerror","onError","overrideMimeType","send","e","readyState","status","responseText","alert","statusText","getByte","index","charCodeAt"],"mappings":"AAAA,MAAMA,OAAN,CAAa;AACTC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAzB;AACA,SAAKG,UAAL,GAAkB,IAAlB,CAFa,CAIb;;AACA,QAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACA,QAAIC,SAAS,GAAG,kCAAkCN,IAAlD;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGQI,IAAAA,OAAO,CAACG,IAAR,CAAa,KAAb,EAAoBD,SAApB,EAA+B,IAA/B;AACAF,IAAAA,OAAO,CAACI,MAAR,GAAiB,KAAKC,MAAtB;AACAL,IAAAA,OAAO,CAACM,OAAR,GAAkB,KAAKC,OAAvB;AACAP,IAAAA,OAAO,CAACQ,gBAAR,CAAyB,oCAAzB;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,IAAb,EAnCa,CAqCb;AACH;;AAEDJ,EAAAA,MAAM,CAAEK,CAAF,EAAI;AACN,QAAG,KAAKC,UAAL,KAAoB,CAAvB,EACI;AACI,UAAG,KAAKC,MAAL,KAAgB,GAAhB,IAAuB,KAAKA,MAAL,KAAgB,CAA1C,EACA;AACI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACoBb,QAAAA,UAAU,GAAG,KAAKc,YAAlB;AACH;AACJ,KAdL,MAeQ;AACAC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;AACR;;AAEDP,EAAAA,OAAO,CAAEG,CAAF,EAAI;AACPb,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAa,KAAKiB,UAA9B;AACH;;AAEDC,EAAAA,OAAO,CAAEC,KAAF,EAAS;AACZ,WAAOlB,UAAU,CAACmB,UAAX,CAAsBD,KAAtB,IAA+B,IAAtC;AACH;;AApEQ;;AAuEb,eAAevB,OAAf","sourcesContent":["class RHSFile{\r\n    constructor(path){\r\n        console.log(\"loading \" + path);\r\n        this.filestream = null;\r\n\r\n        //Test\r\n        var rawFile = new XMLHttpRequest();\r\n        var localPath = \"http://localhost:3001/sample/\" + path;\r\n\r\n        /*\r\n        rawFile.onreadystatechange = function ()\r\n        {\r\n            if(rawFile.readyState === 4)\r\n            {\r\n                if(rawFile.status === 200 || rawFile.status == 0)\r\n                {\r\n                    var reader = new FileReader();\r\n                    \r\n                    reader.onload = function(e){\r\n                        console.log(e.target.result);\r\n                    };\r\n                    reader.readAsBinaryString(rawFile.response);\r\n                }\r\n\r\n                rawFile.send(null);\r\n            }\r\n            else{\r\n                alert('Failed to read file ' + path);\r\n            }\r\n        }\r\n        */\r\n\r\n        rawFile.open(\"GET\", localPath, true);\r\n        rawFile.onload = this.onLoad;\r\n        rawFile.onerror = this.onError;\r\n        rawFile.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        rawFile.send(null);\r\n\r\n        //reader.readAsBinaryString(\"intan_save_210107_151441.rhs\");\r\n    }\r\n\r\n    onLoad (e){\r\n        if(this.readyState === 4)\r\n            {\r\n                if(this.status === 200 || this.status === 0)\r\n                {\r\n                    /*\r\n                    var reader = new FileReader();\r\n                    \r\n                    reader.onload = function(e){\r\n                        console.log(e.target.result);\r\n                    };\r\n                    reader.readAsBinaryString(this.response);\r\n                    */\r\n                    filestream = this.responseText;\r\n                }\r\n            }\r\n            else{\r\n                alert('Failed to read file');\r\n            }\r\n    }\r\n\r\n    onError (e){\r\n        console.log('Error : ' + this.statusText);\r\n    }\r\n    \r\n    getByte (index) {\r\n        return filestream.charCodeAt(index) & 0xff;\r\n    }\r\n}\r\n\r\nexport default RHSFile;"]},"metadata":{},"sourceType":"module"}