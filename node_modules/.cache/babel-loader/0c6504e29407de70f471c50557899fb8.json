{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tank6\\\\Desktop\\\\React\\\\brainwave_webviewer\\\\src\\\\pages\\\\viewer.js\";\nimport React from 'react';\nimport logo from \".././logo.svg\";\nimport './viewer.css';\nimport CanvasGraph from './CanvasGraph';\n\nclass WaveGraphPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels: 16,\n      count: 5000,\n      canvasWidth: 1600,\n      isPlaying: false\n    };\n    this.graphRef = null;\n    this.onPlayStateChanged = this.onPlayStateChanged.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onPlayButtonClicked = this.onPlayButtonClicked.bind(this);\n    this.onResize = this.onResize.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isPlaying: this.graphRef.isPlaying\n    });\n    this.onResize(); //fetch('http://localhost:3000/api');\n\n    window.addEventListener(\"resize\", this.onResize);\n    window.addEventListener(\"keydown\", this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n    window.removeEventListener(\"keydown\", this.onKeyDown);\n  }\n\n  parse(file) {//parse file\n  }\n\n  onPlayStateChanged() {\n    if (this.graphRef === null) return;\n    this.setState({\n      isPlaying: this.graphRef.isPlaying\n    });\n  }\n\n  onPlayButtonClicked(e) {\n    this.graphRef.togglePlay();\n  }\n\n  onKeyDown(e) {\n    if (e.keyCode === 32) this.graphRef.togglePlay();\n  }\n\n  onResize() {\n    this.setState({\n      canvasWidth: this.graphRef.getCanvas().getBoundingClientRect().width\n    });\n  }\n\n  setChannelCount(c) {\n    this.setState({\n      channels: c\n    });\n  }\n\n  setPeakCount(c) {\n    this.setState({\n      count: c\n    });\n  }\n\n  render() {\n    var btnStyle = {\n      height: '50px',\n      width: '50px'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CanvasGraph, {\n        ref: ref => {\n          this.graphRef = ref;\n        },\n        height: \"50\",\n        width: this.state.canvasWidth,\n        channels: this.state.channels,\n        count: this.state.count,\n        invertal: \"10\",\n        strokeColor: \"#FFFFFF\",\n        onPlayStateChanged: this.onPlayStateChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onPlayButtonClicked,\n        style: btnStyle,\n        children: this.state.isPlaying ? \"stop\" : \"play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass FileList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onFileSelected = this.onFileSelected.bind(this); //Request file list to back-end\n    //fetch(\"/files\");\n\n    this.state = {\n      fileList: [\"intan_save_210107_151441.rhs\"],\n      selectedFile: \"\"\n    };\n  }\n\n  onFileSelected() {\n    var selected = document.getElementById(\"fileList\").value;\n    if (selected === this.state.selectedFile) return;\n    this.setState({\n      selectedFile: selected\n    });\n    console.log(\"selected : \" + selected); //Load File\n\n    var reader = new FileReader();\n\n    reader.onload = function (e) {};\n\n    reader.readAsBinaryString(selected.toString()); //Event\n\n    if (this.props.onFileLoaded !== undefined) this.props.onFileLoaded();\n  }\n\n  render() {\n    var options = [];\n\n    for (var i = 0; i < this.state.fileList.length; i++) {\n      options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: this.state.fileList[i],\n        children: this.state.fileList[i]\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 18\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"fileList\",\n      className: \"files\",\n      onDoubleClick: this.onFileSelected,\n      multiple: true,\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass PlayerController extends React.Component {\n  constructor(props) {\n    super(props);\n    this.count_select_onchange = this.count_select_onchange.bind(this);\n    this.channel_select_onchange = this.channel_select_onchange.bind(this);\n  }\n\n  count_select_onchange() {\n    if (this.props.onCountChanged !== undefined) this.props.onCountChanged(document.getElementById(\"count_select\").value);\n  }\n\n  channel_select_onchange() {\n    if (this.props.onChannelChanged !== undefined) this.props.onChannelChanged(document.getElementById(\"channel_select\").value);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player_Controller\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uC544\\uC544\\uC544\\u314F\\u314F\\uC544\\uC544\\uC544\\uBA54\\uB274\\uC6B0\\uC6B0\\u315C\\uC6B0\\u3161\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD655\\uB300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"count_select\",\n        defaultValue: \"5000\",\n        onChange: this.count_select_onchange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"500\",\n          children: \"500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1000\",\n          children: \"1000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2500\",\n          children: \"2500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"5000\",\n          children: \"5000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uCC44\\uB110\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"channel_select\",\n        defaultValue: \"16\",\n        onChange: this.channel_select_onchange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"4\",\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"8\",\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"16\",\n          children: \"16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Viewer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.playerRef = /*#__PURE__*/React.createRef();\n    this.onCountChanged = this.onCountChanged.bind(this);\n    this.onChannelChanged = this.onChannelChanged.bind(this);\n    this.onFileLoaded = this.onFileLoaded.bind(this);\n  }\n\n  onCountChanged(v) {\n    this.playerRef.setPeakCount(v);\n  }\n\n  onChannelChanged(v) {\n    this.playerRef.setChannelCount(v);\n  }\n\n  onFileLoaded(file) {\n    this.playerRef.parse(file);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Viewer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Viewer_Menu\",\n        children: [/*#__PURE__*/_jsxDEV(PlayerController, {\n          onCountChanged: this.onCountChanged,\n          onChannelChanged: this.onChannelChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FileList, {\n          onFileLoaded: this.onFileLoaded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Viewer_Graph\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"logo\",\n          alt: \"logo\",\n          width: \"100px\",\n          height: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(WaveGraphPlayer, {\n          ref: ref => {\n            this.playerRef = ref;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Viewer;","map":{"version":3,"sources":["C:/Users/tank6/Desktop/React/brainwave_webviewer/src/pages/viewer.js"],"names":["React","CanvasGraph","WaveGraphPlayer","Component","constructor","props","state","channels","count","canvasWidth","isPlaying","graphRef","onPlayStateChanged","bind","onKeyDown","onPlayButtonClicked","onResize","componentDidMount","setState","window","addEventListener","componentWillUnmount","removeEventListener","parse","file","e","togglePlay","keyCode","getCanvas","getBoundingClientRect","width","setChannelCount","c","setPeakCount","render","btnStyle","height","ref","FileList","onFileSelected","fileList","selectedFile","selected","document","getElementById","value","console","log","reader","FileReader","onload","readAsBinaryString","toString","onFileLoaded","undefined","options","i","length","push","PlayerController","count_select_onchange","channel_select_onchange","onCountChanged","onChannelChanged","Viewer","playerRef","createRef","v","logo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from '.././logo.svg';\r\nimport './viewer.css';\r\nimport CanvasGraph from './CanvasGraph';\r\n\r\nclass WaveGraphPlayer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            channels: 16,\r\n            count: 5000,\r\n            canvasWidth: 1600,\r\n            isPlaying: false\r\n        };\r\n\r\n        this.graphRef = null;\r\n\r\n        this.onPlayStateChanged = this.onPlayStateChanged.bind(this);\r\n        this.onKeyDown = this.onKeyDown.bind(this);\r\n        this.onPlayButtonClicked = this.onPlayButtonClicked.bind(this);\r\n        this.onResize = this.onResize.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({isPlaying: this.graphRef.isPlaying});\r\n        this.onResize();\r\n        //fetch('http://localhost:3000/api');\r\n        window.addEventListener(\"resize\", this.onResize);\r\n        window.addEventListener(\"keydown\", this.onKeyDown);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        window.removeEventListener(\"resize\", this.onResize);\r\n        window.removeEventListener(\"keydown\", this.onKeyDown);\r\n    }\r\n\r\n    parse (file){\r\n        //parse file\r\n\r\n    }\r\n\r\n    onPlayStateChanged(){\r\n        if (this.graphRef === null)\r\n            return;\r\n\r\n        this.setState({isPlaying: this.graphRef.isPlaying});\r\n    }\r\n\r\n    onPlayButtonClicked(e){\r\n        this.graphRef.togglePlay();\r\n    }\r\n\r\n    onKeyDown(e){\r\n        if (e.keyCode === 32)\r\n            this.graphRef.togglePlay();\r\n    }\r\n\r\n    onResize(){\r\n        this.setState({\r\n            canvasWidth: this.graphRef.getCanvas().getBoundingClientRect().width\r\n        });\r\n    }\r\n\r\n    setChannelCount (c){\r\n        this.setState({channels: c});\r\n    }\r\n\r\n    setPeakCount (c){\r\n        this.setState({count: c});\r\n    }\r\n\r\n    render(){\r\n        var btnStyle={\r\n            height: '50px',\r\n            width: '50px'\r\n        }\r\n        return(\r\n        <div>\r\n            <CanvasGraph ref={ref=>{this.graphRef = ref;}}\r\n            height='50' width={this.state.canvasWidth}\r\n            channels={this.state.channels} count={this.state.count}\r\n            invertal='10' strokeColor=\"#FFFFFF\"\r\n            onPlayStateChanged={this.onPlayStateChanged}/>\r\n            <button onClick={this.onPlayButtonClicked} style={btnStyle}>\r\n                {this.state.isPlaying ? \"stop\" : \"play\"}\r\n            </button>\r\n        </div>);\r\n    }\r\n}\r\n\r\nclass FileList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onFileSelected = this.onFileSelected.bind(this);\r\n\r\n        //Request file list to back-end\r\n        //fetch(\"/files\");\r\n\r\n        this.state = {\r\n            fileList: [\"intan_save_210107_151441.rhs\"],\r\n            selectedFile: \"\"\r\n        };\r\n    }\r\n\r\n    onFileSelected (){\r\n        var selected = document.getElementById(\"fileList\").value;\r\n\r\n        if (selected === this.state.selectedFile)\r\n            return;\r\n\r\n        this.setState({selectedFile: selected});\r\n        console.log(\"selected : \" + selected);\r\n\r\n        //Load File\r\n        var reader = new FileReader();\r\n        reader.onload = function(e){\r\n\r\n        }\r\n        reader.readAsBinaryString(selected.toString());\r\n\r\n        //Event\r\n        if (this.props.onFileLoaded !== undefined)\r\n            this.props.onFileLoaded();\r\n    }\r\n\r\n    render(){\r\n        var options = [];\r\n        for (var i = 0; i < this.state.fileList.length; i++){\r\n             options.push(\r\n                 <option key={i} value={this.state.fileList[i]}>{this.state.fileList[i]}</option>\r\n             )       \r\n        }\r\n\r\n        return (\r\n        <select id=\"fileList\" className=\"files\"  onDoubleClick={this.onFileSelected} multiple>\r\n            {options}\r\n        </select>);\r\n    }\r\n}\r\n\r\nclass PlayerController extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.count_select_onchange = this.count_select_onchange.bind(this);\r\n        this.channel_select_onchange = this.channel_select_onchange.bind(this);\r\n    }\r\n\r\n    count_select_onchange (){\r\n        if (this.props.onCountChanged !== undefined)\r\n            this.props.onCountChanged(document.getElementById(\"count_select\").value);\r\n    }\r\n\r\n    channel_select_onchange (){\r\n        if (this.props.onChannelChanged !== undefined)\r\n            this.props.onChannelChanged(document.getElementById(\"channel_select\").value);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"player_Controller\">\r\n            <span>아아아ㅏㅏ아아아메뉴우우ㅜ우ㅡ</span>\r\n            \r\n            <br/>\r\n            <br/>\r\n            <span>확대</span>\r\n            <select id=\"count_select\" defaultValue='5000' onChange={this.count_select_onchange}>\r\n                <option value='500'>500</option>\r\n                <option value='1000'>1000</option>\r\n                <option value='2500'>2500</option>\r\n                <option value='5000'>5000</option>\r\n            </select>\r\n\r\n            <br/>\r\n            <span>채널</span>\r\n            <select id=\"channel_select\" defaultValue='16' onChange={this.channel_select_onchange}>\r\n                <option value='1'>1</option>\r\n                <option value='2'>2</option>\r\n                <option value='4'>4</option>\r\n                <option value='8'>8</option>\r\n                <option value='16'>16</option>\r\n            </select>\r\n        </div>);\r\n    }\r\n}\r\n\r\nclass Viewer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.playerRef = React.createRef();\r\n\r\n        this.onCountChanged = this.onCountChanged.bind(this);\r\n        this.onChannelChanged = this.onChannelChanged.bind(this);\r\n        this.onFileLoaded = this.onFileLoaded.bind(this);\r\n    }\r\n    \r\n    onCountChanged (v){\r\n        this.playerRef.setPeakCount(v);\r\n    }\r\n\r\n    onChannelChanged(v){\r\n        this.playerRef.setChannelCount(v);\r\n    }\r\n\r\n    onFileLoaded(file){\r\n        this.playerRef.parse(file);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"Viewer\">\r\n            <div className=\"Viewer_Menu\">\r\n                <PlayerController\r\n                onCountChanged={this.onCountChanged}\r\n                onChannelChanged={this.onChannelChanged}/>\r\n                <FileList onFileLoaded={this.onFileLoaded}/>\r\n            </div>\r\n            <div className=\"Viewer_Graph\">\r\n                <img src={logo} className=\"logo\" alt=\"logo\" \r\n                width='100px' height='100px'/>\r\n                <WaveGraphPlayer ref={ref=>{this.playerRef = ref;}} />\r\n            </div> \r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Viewer;"]},"metadata":{},"sourceType":"module"}