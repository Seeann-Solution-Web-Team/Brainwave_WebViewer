{"ast":null,"code":"class RHSFile {\n  constructor(path) {\n    console.log(\"loading \" + path); //Test\n\n    const fs = require('fs');\n\n    let content = fs.readFileSync(localPath);\n\n    rawFile.onreadystatechange = function () {\n      if (rawFile.readyState === 4) {\n        if (rawFile.status === 200 || rawFile.status == 0) {\n          var reader = new FileReader();\n\n          reader.onload = function (e) {\n            console.log(e.target.result);\n          };\n\n          reader.readAsBinaryString(rawFile.response);\n        }\n      } else {\n        alert('Failed to read file ' + path);\n      }\n    };\n\n    rawFile.open(\"GET\", localPath, false); //reader.readAsBinaryString(\"intan_save_210107_151441.rhs\");\n    //Parse\n  }\n\n}\n\nexport default RHSFile;","map":{"version":3,"sources":["C:/Users/tank6/Desktop/React/brainwave_webviewer/src/pages/RHSFile.js"],"names":["RHSFile","constructor","path","console","log","fs","require","content","readFileSync","localPath","rawFile","onreadystatechange","readyState","status","reader","FileReader","onload","e","target","result","readAsBinaryString","response","alert","open"],"mappings":"AAAA,MAAMA,OAAN,CAAa;AACTC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAzB,EADa,CAGb;;AACA,UAAMG,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,QAAIC,OAAO,GAAGF,EAAE,CAACG,YAAH,CAAgBC,SAAhB,CAAd;;AAEAC,IAAAA,OAAO,CAACC,kBAAR,GAA6B,YAC7B;AACI,UAAGD,OAAO,CAACE,UAAR,KAAuB,CAA1B,EACA;AACI,YAAGF,OAAO,CAACG,MAAR,KAAmB,GAAnB,IAA0BH,OAAO,CAACG,MAAR,IAAkB,CAA/C,EACA;AACI,cAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,UAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAW;AACvBd,YAAAA,OAAO,CAACC,GAAR,CAAYa,CAAC,CAACC,MAAF,CAASC,MAArB;AACH,WAFD;;AAGAL,UAAAA,MAAM,CAACM,kBAAP,CAA0BV,OAAO,CAACW,QAAlC;AACH;AACJ,OAXD,MAYI;AACAC,QAAAA,KAAK,CAAC,yBAAyBpB,IAA1B,CAAL;AACH;AACJ,KAjBD;;AAmBAQ,IAAAA,OAAO,CAACa,IAAR,CAAa,KAAb,EAAoBd,SAApB,EAA+B,KAA/B,EA1Ba,CA4Bb;AAEA;AACH;;AAhCQ;;AAmCb,eAAeT,OAAf","sourcesContent":["class RHSFile{\r\n    constructor(path){\r\n        console.log(\"loading \" + path);\r\n\r\n        //Test\r\n        const fs = require('fs');\r\n        let content = fs.readFileSync(localPath);\r\n\r\n        rawFile.onreadystatechange = function ()\r\n        {\r\n            if(rawFile.readyState === 4)\r\n            {\r\n                if(rawFile.status === 200 || rawFile.status == 0)\r\n                {\r\n                    var reader = new FileReader();\r\n                    \r\n                    reader.onload = function(e){\r\n                        console.log(e.target.result);\r\n                    };\r\n                    reader.readAsBinaryString(rawFile.response);\r\n                }\r\n            }\r\n            else{\r\n                alert('Failed to read file ' + path);\r\n            }\r\n        }\r\n\r\n        rawFile.open(\"GET\", localPath, false);\r\n\r\n        //reader.readAsBinaryString(\"intan_save_210107_151441.rhs\");\r\n\r\n        //Parse\r\n    }\r\n}\r\n\r\nexport default RHSFile;"]},"metadata":{},"sourceType":"module"}