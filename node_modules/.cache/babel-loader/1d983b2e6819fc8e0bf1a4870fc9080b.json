{"ast":null,"code":"class RHSFile {\n  constructor() {\n    this.filestream = null;\n    this.onProgress = this.onProgress.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n    this.onError = this.onError.bind(this);\n  }\n\n  load(path) {\n    console.log(\"loading \" + path); //Test\n\n    var localPath = \"http://localhost:3001/sample/\" + path;\n    this.request = new XMLHttpRequest();\n    this.request.open(\"GET\", localPath, true);\n    this.request.onprogress = this.onProgress;\n    this.request.onload = this.onLoad;\n    this.request.onerror = this.onError;\n    this.request.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    this.request.send(null);\n  } //#####Events#####\n\n\n  onProgress(e) {\n    var percentage = e.loaded / e.total * 100;\n    console.log(e.loaded + ' / ' + e.total + \" (\" + percentage + '%)');\n  }\n\n  onLoad(e) {\n    if (this.request.readyState === 4) {\n      if (this.request.status === 200 || this.request.status === 0) {\n        this.filestream = this.request.responseText;\n        console.log('file loaded successfully');\n      }\n    } else {\n      alert('Failed to read file');\n    } //Validate Magin-number\n\n\n    var magicNum = this.getMultiBytes(0, 4);\n\n    for (var i = 0; i < magicNum.length; i++) {\n      console.log('byte[' + i + '] : ' + magicNum[i].toString(16));\n    }\n\n    var dataView = new DataView(this.request.response);\n    console.log('version: ' + this.getInt16(4));\n    console.log('sample rate: ' + dataView.getFloat32(8));\n    console.log('DSP Enabled: ' + this.getInt16(12));\n  }\n\n  onError(e) {\n    console.log('Error : ' + this.request.statusText);\n  } //#####Utilities#####\n\n\n  getByte(index) {\n    if (this.filestream) return this.filestream.charCodeAt(index) & 0xff;else return 0x00;\n  } //little-endian\n\n\n  getMultiBytes(startIdx, count) {\n    var array = [];\n\n    for (var i = count - 1; i > -1; i--) {\n      array.push(this.getByte(startIdx + i));\n    }\n\n    return array;\n  }\n\n  getInt16(index) {\n    var bytes = this.getMultiBytes(index, 2);\n    var value = 0;\n\n    for (var i = 0; i < bytes.length; i++) {\n      value = value << i * 8 | bytes[i];\n    }\n\n    return value;\n  }\n\n  getSingle(index) {\n    var bytes = this.getMultiBytes(index, 4);\n    var value = 0;\n    var f = new Float32Array(1);\n\n    for (var i = 0; i < bytes.length; i++) {\n      value = value << i * 8 | bytes[i];\n    }\n\n    f[0] = f[0] | value;\n    return f[0];\n  }\n\n}\n\nexport default RHSFile;","map":{"version":3,"sources":["C:/Users/tank6/Desktop/React/brainwave_webviewer/src/pages/RHSFile.js"],"names":["RHSFile","constructor","filestream","onProgress","bind","onLoad","onError","load","path","console","log","localPath","request","XMLHttpRequest","open","onprogress","onload","onerror","overrideMimeType","send","e","percentage","loaded","total","readyState","status","responseText","alert","magicNum","getMultiBytes","i","length","toString","dataView","DataView","response","getInt16","getFloat32","statusText","getByte","index","charCodeAt","startIdx","count","array","push","bytes","value","getSingle","f","Float32Array"],"mappings":"AAAA,MAAMA,OAAN,CAAa;AACTC,EAAAA,WAAW,GAAE;AACT,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAEDG,EAAAA,IAAI,CAAEC,IAAF,EAAO;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAzB,EADO,CAGP;;AACA,QAAIG,SAAS,GAAG,kCAAkCH,IAAlD;AAEA,SAAKI,OAAL,GAAe,IAAIC,cAAJ,EAAf;AACA,SAAKD,OAAL,CAAaE,IAAb,CAAkB,KAAlB,EAAyBH,SAAzB,EAAoC,IAApC;AACA,SAAKC,OAAL,CAAaG,UAAb,GAA0B,KAAKZ,UAA/B;AACA,SAAKS,OAAL,CAAaI,MAAb,GAAsB,KAAKX,MAA3B;AACA,SAAKO,OAAL,CAAaK,OAAb,GAAuB,KAAKX,OAA5B;AACA,SAAKM,OAAL,CAAaM,gBAAb,CAA8B,oCAA9B;AACA,SAAKN,OAAL,CAAaO,IAAb,CAAkB,IAAlB;AACH,GArBQ,CAuBT;;;AACAhB,EAAAA,UAAU,CAACiB,CAAD,EAAG;AACT,QAAIC,UAAU,GAAGD,CAAC,CAACE,MAAF,GAAWF,CAAC,CAACG,KAAb,GAAqB,GAAtC;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAC,CAACE,MAAF,GAAW,KAAX,GAAmBF,CAAC,CAACG,KAArB,GAA6B,IAA7B,GAAoCF,UAApC,GAAiD,IAA7D;AACH;;AAEDhB,EAAAA,MAAM,CAAEe,CAAF,EAAI;AACN,QAAG,KAAKR,OAAL,CAAaY,UAAb,KAA4B,CAA/B,EAAkC;AAC9B,UAAG,KAAKZ,OAAL,CAAaa,MAAb,KAAwB,GAAxB,IAA+B,KAAKb,OAAL,CAAaa,MAAb,KAAwB,CAA1D,EAA6D;AACzD,aAAKvB,UAAL,GAAkB,KAAKU,OAAL,CAAac,YAA/B;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH;AACJ,KALD,MAMI;AACAiB,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACH,KATK,CAWN;;;AACA,QAAIC,QAAQ,GAAG,KAAKC,aAAL,CAAmB,CAAnB,EAAsB,CAAtB,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACrCrB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUoB,CAAV,GAAc,MAAd,GAAuBF,QAAQ,CAACE,CAAD,CAAR,CAAYE,QAAZ,CAAqB,EAArB,CAAnC;AACH;;AAED,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,CAAa,KAAKtB,OAAL,CAAauB,QAA1B,CAAf;AAEA1B,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAc,KAAK0B,QAAL,CAAc,CAAd,CAA1B;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBuB,QAAQ,CAACI,UAAT,CAAoB,CAApB,CAA9B;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAK0B,QAAL,CAAc,EAAd,CAA9B;AACH;;AAED9B,EAAAA,OAAO,CAAEc,CAAF,EAAI;AACPX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAa,KAAKE,OAAL,CAAa0B,UAAtC;AACH,GAvDQ,CAyDT;;;AACAC,EAAAA,OAAO,CAAEC,KAAF,EAAS;AACZ,QAAI,KAAKtC,UAAT,EACI,OAAO,KAAKA,UAAL,CAAgBuC,UAAhB,CAA2BD,KAA3B,IAAoC,IAA3C,CADJ,KAGI,OAAO,IAAP;AACP,GA/DQ,CAiET;;;AACAX,EAAAA,aAAa,CAACa,QAAD,EAAWC,KAAX,EAAkB;AAC3B,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAId,CAAC,GAAGa,KAAK,GAAG,CAApB,EAAuBb,CAAC,GAAG,CAAC,CAA5B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/Bc,MAAAA,KAAK,CAACC,IAAN,CAAW,KAAKN,OAAL,CAAaG,QAAQ,GAAGZ,CAAxB,CAAX;AACH;;AAED,WAAOc,KAAP;AACH;;AAEDR,EAAAA,QAAQ,CAACI,KAAD,EAAQ;AACZ,QAAIM,KAAK,GAAG,KAAKjB,aAAL,CAAmBW,KAAnB,EAA0B,CAA1B,CAAZ;AACA,QAAIO,KAAK,GAAG,CAAZ;;AAEA,SAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,KAAK,CAACf,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClCiB,MAAAA,KAAK,GAAIA,KAAK,IAAKjB,CAAC,GAAG,CAAf,GAAqBgB,KAAK,CAAChB,CAAD,CAAlC;AACH;;AAED,WAAOiB,KAAP;AACH;;AAEDC,EAAAA,SAAS,CAACR,KAAD,EAAQ;AACb,QAAIM,KAAK,GAAG,KAAKjB,aAAL,CAAmBW,KAAnB,EAA0B,CAA1B,CAAZ;AACA,QAAIO,KAAK,GAAG,CAAZ;AACA,QAAIE,CAAC,GAAG,IAAIC,YAAJ,CAAiB,CAAjB,CAAR;;AAEA,SAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,KAAK,CAACf,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClCiB,MAAAA,KAAK,GAAIA,KAAK,IAAKjB,CAAC,GAAG,CAAf,GAAqBgB,KAAK,CAAChB,CAAD,CAAlC;AACH;;AAEDmB,IAAAA,CAAC,CAAC,CAAD,CAAD,GAAOA,CAAC,CAAC,CAAD,CAAD,GAAOF,KAAd;AAEA,WAAOE,CAAC,CAAC,CAAD,CAAR;AACH;;AAlGQ;;AAqGb,eAAejD,OAAf","sourcesContent":["class RHSFile{\r\n    constructor(){\r\n        this.filestream = null;\r\n        this.onProgress = this.onProgress.bind(this);\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    load (path){\r\n        console.log(\"loading \" + path);\r\n\r\n        //Test\r\n        var localPath = \"http://localhost:3001/sample/\" + path;\r\n\r\n        this.request = new XMLHttpRequest();\r\n        this.request.open(\"GET\", localPath, true);\r\n        this.request.onprogress = this.onProgress;\r\n        this.request.onload = this.onLoad;\r\n        this.request.onerror = this.onError;\r\n        this.request.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        this.request.send(null);\r\n    }\r\n\r\n    //#####Events#####\r\n    onProgress(e){\r\n        var percentage = e.loaded / e.total * 100;\r\n        console.log(e.loaded + ' / ' + e.total + \" (\" + percentage + '%)');\r\n    }\r\n\r\n    onLoad (e){\r\n        if(this.request.readyState === 4) {\r\n            if(this.request.status === 200 || this.request.status === 0) {\r\n                this.filestream = this.request.responseText;\r\n                console.log('file loaded successfully');\r\n            }\r\n        }\r\n        else{\r\n            alert('Failed to read file');\r\n        }\r\n\r\n        //Validate Magin-number\r\n        var magicNum = this.getMultiBytes(0, 4);\r\n        for (var i = 0; i < magicNum.length; i++){\r\n            console.log('byte[' + i + '] : ' + magicNum[i].toString(16));\r\n        }\r\n\r\n        var dataView = new DataView(this.request.response);\r\n\r\n        console.log('version: ' + this.getInt16(4));\r\n        console.log('sample rate: ' + dataView.getFloat32(8));\r\n        console.log('DSP Enabled: ' + this.getInt16(12));\r\n    }\r\n\r\n    onError (e){\r\n        console.log('Error : ' + this.request.statusText);\r\n    }\r\n    \r\n    //#####Utilities#####\r\n    getByte (index) {\r\n        if (this.filestream)\r\n            return this.filestream.charCodeAt(index) & 0xff;\r\n        else\r\n            return 0x00;\r\n    }\r\n\r\n    //little-endian\r\n    getMultiBytes(startIdx, count) {\r\n        var array = [];\r\n        for(var i = count - 1; i > -1; i--){\r\n            array.push(this.getByte(startIdx + i));\r\n        }\r\n        \r\n        return array;\r\n    }\r\n\r\n    getInt16(index) {\r\n        var bytes = this.getMultiBytes(index, 2);\r\n        var value = 0;\r\n\r\n        for (var i = 0; i < bytes.length; i++){\r\n            value = (value << (i * 8)) | bytes[i];\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    getSingle(index) {\r\n        var bytes = this.getMultiBytes(index, 4);\r\n        var value = 0;\r\n        var f = new Float32Array(1);\r\n\r\n        for (var i = 0; i < bytes.length; i++){\r\n            value = (value << (i * 8)) | bytes[i];\r\n        }\r\n\r\n        f[0] = f[0] | value;\r\n\r\n        return f[0];\r\n    }\r\n}\r\n\r\nexport default RHSFile;"]},"metadata":{},"sourceType":"module"}