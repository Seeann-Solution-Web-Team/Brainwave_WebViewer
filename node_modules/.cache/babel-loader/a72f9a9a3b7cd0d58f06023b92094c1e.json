{"ast":null,"code":"class RHSFile {\n  constructor() {\n    this.dataView = null;\n    this.filePos = -1;\n    this.onProgress = this.onProgress.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n    this.onError = this.onError.bind(this);\n  }\n\n  load(path) {\n    console.log(\"loading \" + path); //Test\n\n    this.request = new XMLHttpRequest();\n    this.request.open(\"GET\", \"http://localhost:3001/sample/\" + path, true);\n    this.request.responseType = \"arraybuffer\";\n    this.request.onprogress = this.onProgress;\n    this.request.onload = this.onLoad;\n    this.request.onerror = this.onError;\n    this.request.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    this.request.send(null);\n  } //#####Events#####\n\n\n  onProgress(e) {\n    var percentage = e.loaded / e.total * 100;\n    console.log(e.loaded + ' / ' + e.total + \" (\" + percentage + '%)');\n  }\n\n  onLoad(e) {\n    if (this.request.readyState === 4) {\n      if (this.request.status === 200 || this.request.status === 0) {\n        this.dataView = new DataView(this.request.response);\n        this.filePos = 0;\n        console.log('file loaded successfully');\n        this.parse();\n      }\n    } else {\n      alert('Failed to read file');\n    }\n  }\n\n  onError(e) {\n    console.log('Error : ' + this.request.statusText);\n  }\n\n  parse() {\n    //Validate Magin-number\n    var magicNum = [0xD6, 0x91, 0x27, 0xAC];\n    var nmValues = this.getBytes(4);\n\n    for (var i = 0; i < nmValues.length; i++) {\n      console.log('byte[' + i + '] : ' + nmValues[i].toString(16));\n\n      if (magicNum[i] !== nmValues[i]) {\n        console.log('Wrong magic number detected');\n        return;\n      }\n    }\n\n    console.log('Magic number found'); //Load header\n\n    this.version = this.getInt16();\n    this.secondaryVersion = this.getInt16();\n    this.sampleRate = this.getSingle();\n    this.DSPEnabled = this.getInt16();\n    this.actialDSPCutoffFrequency = this.getSingle();\n    this.actualLowerBandwidth = this.getSingle();\n    this.actualLowerSettleBandwidth = this.getSingle();\n    this.actualUpperBandwidth = this.getSingle();\n    this.desiredDSPCutoffFrequency = this.getSingle();\n    this.desiredLowerBandwidth = this.getSingle();\n    this.desiredLowerSettleBandwidth = this.getSingle();\n    this.desiredUpperBandwidth = this.getSingle();\n    this.notchFilterMode = this.getInt16();\n    this.desiredImpedanceTestFrequency = this.getSingle();\n    this.actualImpedanceTestFrequency = this.getSingle();\n    this.ampSettleMode = this.getInt16();\n    this.cahrgeRecoveryMode = this.getInt16();\n    this.stimStepSize = this.getSingle();\n    this.chargeRecoveryCurrentLimit = this.getSingle();\n    this.chargeRecoveryTargetVoltage = this.getSingle();\n    this.note1 = this.getQString();\n    this.note2 = this.getQString();\n    this.note3 = this.getQString();\n    console.log('version: ' + this.version);\n    console.log('sample rate: ' + this.sampleRate);\n    console.log('DSP Enabled: ' + this.DSPEnabled);\n  } //#####Utilities#####\n  //little-endian\n\n\n  getBytes(count) {\n    var array = [];\n\n    for (var i = count - 1; i > -1; i--) {\n      array.push(this.dataView.getUint8(this.filePos + i));\n    }\n\n    this.filePos += count;\n    return array;\n  }\n\n  getUint16() {\n    this.filePos += 2;\n    return this.dataView.getUint16(this.filePos - 2, true);\n  }\n\n  getInt16() {\n    this.filePos += 2;\n    return this.dataView.getInt16(this.filePos - 2, true);\n  }\n\n  getUint32() {\n    this.filePos += 4;\n    return this.dataView.getUint32(this.filePos - 4, true);\n  }\n\n  getInt32() {\n    this.filePos += 4;\n    return this.dataView.getInt32(this.filePos - 4, true);\n  }\n\n  getSingle() {\n    this.filePos += 4;\n    return this.dataView.getFloat32(this.filePos - 4, true);\n  }\n\n  getDouble() {\n    this.filePos += 8;\n    return this.dataView.getFloat64(this.filePos - 8, true);\n  }\n\n  getQString() {\n    var length = this.dataView.getUint32(this.filePos, true);\n    console.log('QString.length= ' + length);\n    this.filePos += 4;\n    if (length < 1) return \"\";else return new TextDecoder().decode(this.getBytes(length));\n  }\n\n}\n\nexport default RHSFile;","map":{"version":3,"sources":["C:/Users/tank6/Desktop/React/brainwave_webviewer/src/pages/RHSFile.js"],"names":["RHSFile","constructor","dataView","filePos","onProgress","bind","onLoad","onError","load","path","console","log","request","XMLHttpRequest","open","responseType","onprogress","onload","onerror","overrideMimeType","send","e","percentage","loaded","total","readyState","status","DataView","response","parse","alert","statusText","magicNum","nmValues","getBytes","i","length","toString","version","getInt16","secondaryVersion","sampleRate","getSingle","DSPEnabled","actialDSPCutoffFrequency","actualLowerBandwidth","actualLowerSettleBandwidth","actualUpperBandwidth","desiredDSPCutoffFrequency","desiredLowerBandwidth","desiredLowerSettleBandwidth","desiredUpperBandwidth","notchFilterMode","desiredImpedanceTestFrequency","actualImpedanceTestFrequency","ampSettleMode","cahrgeRecoveryMode","stimStepSize","chargeRecoveryCurrentLimit","chargeRecoveryTargetVoltage","note1","getQString","note2","note3","count","array","push","getUint8","getUint16","getUint32","getInt32","getFloat32","getDouble","getFloat64","TextDecoder","decode"],"mappings":"AAAA,MAAMA,OAAN,CAAa;AACTC,EAAAA,WAAW,GAAE;AACT,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,OAAL,GAAe,CAAC,CAAhB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAEDG,EAAAA,IAAI,CAAEC,IAAF,EAAO;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,IAAzB,EADO,CAGP;;AACA,SAAKG,OAAL,GAAe,IAAIC,cAAJ,EAAf;AACA,SAAKD,OAAL,CAAaE,IAAb,CAAkB,KAAlB,EAAyB,kCAAkCL,IAA3D,EAAiE,IAAjE;AACA,SAAKG,OAAL,CAAaG,YAAb,GAA4B,aAA5B;AACA,SAAKH,OAAL,CAAaI,UAAb,GAA0B,KAAKZ,UAA/B;AACA,SAAKQ,OAAL,CAAaK,MAAb,GAAsB,KAAKX,MAA3B;AACA,SAAKM,OAAL,CAAaM,OAAb,GAAuB,KAAKX,OAA5B;AACA,SAAKK,OAAL,CAAaO,gBAAb,CAA8B,oCAA9B;AACA,SAAKP,OAAL,CAAaQ,IAAb,CAAkB,IAAlB;AACH,GArBQ,CAuBT;;;AACAhB,EAAAA,UAAU,CAACiB,CAAD,EAAG;AACT,QAAIC,UAAU,GAAGD,CAAC,CAACE,MAAF,GAAWF,CAAC,CAACG,KAAb,GAAqB,GAAtC;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAC,CAACE,MAAF,GAAW,KAAX,GAAmBF,CAAC,CAACG,KAArB,GAA6B,IAA7B,GAAoCF,UAApC,GAAiD,IAA7D;AACH;;AAEDhB,EAAAA,MAAM,CAAEe,CAAF,EAAI;AACN,QAAG,KAAKT,OAAL,CAAaa,UAAb,KAA4B,CAA/B,EAAkC;AAC9B,UAAG,KAAKb,OAAL,CAAac,MAAb,KAAwB,GAAxB,IAA+B,KAAKd,OAAL,CAAac,MAAb,KAAwB,CAA1D,EAA6D;AACzD,aAAKxB,QAAL,GAAgB,IAAIyB,QAAJ,CAAa,KAAKf,OAAL,CAAagB,QAA1B,CAAhB;AACA,aAAKzB,OAAL,GAAe,CAAf;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,aAAKkB,KAAL;AACH;AACJ,KAPD,MAQI;AACAC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACH;AACJ;;AAEDvB,EAAAA,OAAO,CAAEc,CAAF,EAAI;AACPX,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAa,KAAKC,OAAL,CAAamB,UAAtC;AACH;;AAEDF,EAAAA,KAAK,GAAG;AACJ;AACA,QAAIG,QAAQ,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAf;AACA,QAAIC,QAAQ,GAAG,KAAKC,QAAL,CAAc,CAAd,CAAf;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAAyC;AACrCzB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUwB,CAAV,GAAc,MAAd,GAAuBF,QAAQ,CAACE,CAAD,CAAR,CAAYE,QAAZ,CAAqB,EAArB,CAAnC;;AAEA,UAAIL,QAAQ,CAACG,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAA5B,EAAgC;AAC5BzB,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA;AACH;AACJ;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAbI,CAeJ;;AACA,SAAK2B,OAAL,GAAe,KAAKC,QAAL,EAAf;AACA,SAAKC,gBAAL,GAAwB,KAAKD,QAAL,EAAxB;AACA,SAAKE,UAAL,GAAkB,KAAKC,SAAL,EAAlB;AAEA,SAAKC,UAAL,GAAkB,KAAKJ,QAAL,EAAlB;AAEA,SAAKK,wBAAL,GAAgC,KAAKF,SAAL,EAAhC;AACA,SAAKG,oBAAL,GAA4B,KAAKH,SAAL,EAA5B;AACA,SAAKI,0BAAL,GAAkC,KAAKJ,SAAL,EAAlC;AACA,SAAKK,oBAAL,GAA4B,KAAKL,SAAL,EAA5B;AAEA,SAAKM,yBAAL,GAAiC,KAAKN,SAAL,EAAjC;AACA,SAAKO,qBAAL,GAA6B,KAAKP,SAAL,EAA7B;AACA,SAAKQ,2BAAL,GAAmC,KAAKR,SAAL,EAAnC;AACA,SAAKS,qBAAL,GAA6B,KAAKT,SAAL,EAA7B;AAEA,SAAKU,eAAL,GAAuB,KAAKb,QAAL,EAAvB;AACA,SAAKc,6BAAL,GAAqC,KAAKX,SAAL,EAArC;AACA,SAAKY,4BAAL,GAAoC,KAAKZ,SAAL,EAApC;AAEA,SAAKa,aAAL,GAAqB,KAAKhB,QAAL,EAArB;AACA,SAAKiB,kBAAL,GAA0B,KAAKjB,QAAL,EAA1B;AAEA,SAAKkB,YAAL,GAAoB,KAAKf,SAAL,EAApB;AACA,SAAKgB,0BAAL,GAAkC,KAAKhB,SAAL,EAAlC;AACA,SAAKiB,2BAAL,GAAmC,KAAKjB,SAAL,EAAnC;AAEA,SAAKkB,KAAL,GAAa,KAAKC,UAAL,EAAb;AACA,SAAKC,KAAL,GAAa,KAAKD,UAAL,EAAb;AACA,SAAKE,KAAL,GAAa,KAAKF,UAAL,EAAb;AAEAnD,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAc,KAAK2B,OAA/B;AACA5B,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAK8B,UAAnC;AACA/B,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkB,KAAKgC,UAAnC;AACH,GAjGQ,CAmGT;AACA;;;AACAT,EAAAA,QAAQ,CAAC8B,KAAD,EAAQ;AACZ,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAI,IAAI9B,CAAC,GAAG6B,KAAK,GAAG,CAApB,EAAuB7B,CAAC,GAAG,CAAC,CAA5B,EAA+BA,CAAC,EAAhC,EAAmC;AAC/B8B,MAAAA,KAAK,CAACC,IAAN,CAAW,KAAKhE,QAAL,CAAciE,QAAd,CAAuB,KAAKhE,OAAL,GAAegC,CAAtC,CAAX;AACH;;AAED,SAAKhC,OAAL,IAAgB6D,KAAhB;AACA,WAAOC,KAAP;AACH;;AAEDG,EAAAA,SAAS,GAAE;AACP,SAAKjE,OAAL,IAAgB,CAAhB;AACA,WAAO,KAAKD,QAAL,CAAckE,SAAd,CAAwB,KAAKjE,OAAL,GAAe,CAAvC,EAA0C,IAA1C,CAAP;AACH;;AAEDoC,EAAAA,QAAQ,GAAE;AACN,SAAKpC,OAAL,IAAgB,CAAhB;AACA,WAAO,KAAKD,QAAL,CAAcqC,QAAd,CAAuB,KAAKpC,OAAL,GAAe,CAAtC,EAAyC,IAAzC,CAAP;AACH;;AAEDkE,EAAAA,SAAS,GAAE;AACP,SAAKlE,OAAL,IAAgB,CAAhB;AACA,WAAO,KAAKD,QAAL,CAAcmE,SAAd,CAAwB,KAAKlE,OAAL,GAAe,CAAvC,EAA0C,IAA1C,CAAP;AACH;;AAEDmE,EAAAA,QAAQ,GAAE;AACN,SAAKnE,OAAL,IAAgB,CAAhB;AACA,WAAO,KAAKD,QAAL,CAAcoE,QAAd,CAAuB,KAAKnE,OAAL,GAAe,CAAtC,EAAyC,IAAzC,CAAP;AACH;;AAEDuC,EAAAA,SAAS,GAAE;AACP,SAAKvC,OAAL,IAAgB,CAAhB;AACA,WAAO,KAAKD,QAAL,CAAcqE,UAAd,CAAyB,KAAKpE,OAAL,GAAe,CAAxC,EAA2C,IAA3C,CAAP;AACH;;AAEDqE,EAAAA,SAAS,GAAE;AACP,SAAKrE,OAAL,IAAgB,CAAhB;AACA,WAAO,KAAKD,QAAL,CAAcuE,UAAd,CAAyB,KAAKtE,OAAL,GAAe,CAAxC,EAA2C,IAA3C,CAAP;AACH;;AAED0D,EAAAA,UAAU,GAAI;AACV,QAAIzB,MAAM,GAAG,KAAKlC,QAAL,CAAcmE,SAAd,CAAwB,KAAKlE,OAA7B,EAAsC,IAAtC,CAAb;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqByB,MAAjC;AAEA,SAAKjC,OAAL,IAAgB,CAAhB;AACA,QAAIiC,MAAM,GAAG,CAAb,EACI,OAAO,EAAP,CADJ,KAGI,OAAO,IAAIsC,WAAJ,GAAkBC,MAAlB,CAAyB,KAAKzC,QAAL,CAAcE,MAAd,CAAzB,CAAP;AACP;;AAtJQ;;AAyJb,eAAepC,OAAf","sourcesContent":["class RHSFile{\r\n    constructor(){\r\n        this.dataView = null;\r\n        this.filePos = -1;\r\n        this.onProgress = this.onProgress.bind(this);\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    load (path){\r\n        console.log(\"loading \" + path);\r\n\r\n        //Test\r\n        this.request = new XMLHttpRequest();\r\n        this.request.open(\"GET\", \"http://localhost:3001/sample/\" + path, true);\r\n        this.request.responseType = \"arraybuffer\";\r\n        this.request.onprogress = this.onProgress;\r\n        this.request.onload = this.onLoad;\r\n        this.request.onerror = this.onError;\r\n        this.request.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        this.request.send(null);\r\n    }\r\n\r\n    //#####Events#####\r\n    onProgress(e){\r\n        var percentage = e.loaded / e.total * 100;\r\n        console.log(e.loaded + ' / ' + e.total + \" (\" + percentage + '%)');\r\n    }\r\n\r\n    onLoad (e){\r\n        if(this.request.readyState === 4) {\r\n            if(this.request.status === 200 || this.request.status === 0) {\r\n                this.dataView = new DataView(this.request.response);\r\n                this.filePos = 0;\r\n                console.log('file loaded successfully');\r\n                this.parse();\r\n            }\r\n        }\r\n        else{\r\n            alert('Failed to read file');\r\n        }\r\n    }\r\n\r\n    onError (e){\r\n        console.log('Error : ' + this.request.statusText);\r\n    }\r\n\r\n    parse (){\r\n        //Validate Magin-number\r\n        var magicNum = [0xD6, 0x91, 0x27, 0xAC];\r\n        var nmValues = this.getBytes(4);\r\n        \r\n        for (var i = 0; i < nmValues.length; i++){\r\n            console.log('byte[' + i + '] : ' + nmValues[i].toString(16));\r\n            \r\n            if (magicNum[i] !== nmValues[i]){\r\n                console.log('Wrong magic number detected');\r\n                return;\r\n            }\r\n        }\r\n        console.log('Magic number found');\r\n\r\n        //Load header\r\n        this.version = this.getInt16();\r\n        this.secondaryVersion = this.getInt16();\r\n        this.sampleRate = this.getSingle();\r\n\r\n        this.DSPEnabled = this.getInt16();\r\n\r\n        this.actialDSPCutoffFrequency = this.getSingle();\r\n        this.actualLowerBandwidth = this.getSingle();\r\n        this.actualLowerSettleBandwidth = this.getSingle();\r\n        this.actualUpperBandwidth = this.getSingle();\r\n        \r\n        this.desiredDSPCutoffFrequency = this.getSingle();\r\n        this.desiredLowerBandwidth = this.getSingle();\r\n        this.desiredLowerSettleBandwidth = this.getSingle();\r\n        this.desiredUpperBandwidth = this.getSingle();\r\n\r\n        this.notchFilterMode = this.getInt16();\r\n        this.desiredImpedanceTestFrequency = this.getSingle();\r\n        this.actualImpedanceTestFrequency = this.getSingle();\r\n\r\n        this.ampSettleMode = this.getInt16();\r\n        this.cahrgeRecoveryMode = this.getInt16();\r\n        \r\n        this.stimStepSize = this.getSingle();\r\n        this.chargeRecoveryCurrentLimit = this.getSingle();\r\n        this.chargeRecoveryTargetVoltage = this.getSingle();\r\n        \r\n        this.note1 = this.getQString();\r\n        this.note2 = this.getQString();\r\n        this.note3 = this.getQString();\r\n\r\n        console.log('version: ' + this.version);\r\n        console.log('sample rate: ' + this.sampleRate);\r\n        console.log('DSP Enabled: ' + this.DSPEnabled);\r\n    }\r\n    \r\n    //#####Utilities#####\r\n    //little-endian\r\n    getBytes(count) {\r\n        var array = [];\r\n        for(var i = count - 1; i > -1; i--){\r\n            array.push(this.dataView.getUint8(this.filePos + i));\r\n        }\r\n\r\n        this.filePos += count;\r\n        return array;\r\n    }\r\n\r\n    getUint16(){\r\n        this.filePos += 2;\r\n        return this.dataView.getUint16(this.filePos - 2, true);\r\n    }\r\n\r\n    getInt16(){\r\n        this.filePos += 2;\r\n        return this.dataView.getInt16(this.filePos - 2, true);\r\n    }\r\n\r\n    getUint32(){\r\n        this.filePos += 4;\r\n        return this.dataView.getUint32(this.filePos - 4, true);\r\n    }\r\n\r\n    getInt32(){\r\n        this.filePos += 4;\r\n        return this.dataView.getInt32(this.filePos - 4, true);\r\n    }\r\n\r\n    getSingle(){\r\n        this.filePos += 4;\r\n        return this.dataView.getFloat32(this.filePos - 4, true);\r\n    }\r\n\r\n    getDouble(){\r\n        this.filePos += 8;\r\n        return this.dataView.getFloat64(this.filePos - 8, true);\r\n    }\r\n\r\n    getQString () {\r\n        var length = this.dataView.getUint32(this.filePos, true);\r\n        console.log('QString.length= ' + length);\r\n        \r\n        this.filePos += 4;\r\n        if (length < 1)\r\n            return \"\";\r\n        else\r\n            return new TextDecoder().decode(this.getBytes(length));\r\n    }\r\n}\r\n\r\nexport default RHSFile;"]},"metadata":{},"sourceType":"module"}