{"ast":null,"code":"class RHSFile {\n  constructor() {\n    this.dataView = null;\n    this.onProgress = this.onProgress.bind(this);\n    this.onLoad = this.onLoad.bind(this);\n    this.onError = this.onError.bind(this);\n  }\n\n  load(path) {\n    console.log(\"loading \" + path); //Test\n\n    var localPath = \"http://localhost:3001/sample/\" + path;\n    this.request = new XMLHttpRequest();\n    this.request.open(\"GET\", localPath, true);\n    this.request.responseType = \"arraybuffer\";\n    this.request.onprogress = this.onProgress;\n    this.request.onload = this.onLoad;\n    this.request.onerror = this.onError;\n    this.request.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    this.request.send(null);\n  } //#####Events#####\n\n\n  onProgress(e) {\n    var percentage = e.loaded / e.total * 100;\n    console.log(e.loaded + ' / ' + e.total + \" (\" + percentage + '%)');\n  }\n\n  onLoad(e) {\n    if (this.request.readyState === 4) {\n      if (this.request.status === 200 || this.request.status === 0) {\n        this.dataView = new DataView(this.request.response);\n        console.log('file loaded successfully');\n      }\n    } else {\n      alert('Failed to read file');\n    }\n  }\n\n  onError(e) {\n    console.log('Error : ' + this.request.statusText);\n  }\n\n  parse() {\n    //Validate Magin-number\n    var magicNum = [0xD6, 0x91, 0x27, 0xAC];\n    var nmValues = this.getMultiBytes(0, 4);\n\n    for (var i = 0; i < nmValues.length; i++) {\n      console.log('byte[' + i + '] : ' + nmValues[i].toString(16));\n\n      if (magicNum[i] !== nmValues[i]) {\n        console.log('Wrong magic number detected');\n        return;\n      }\n    }\n\n    console.log('Magic number found'); //Load header\n\n    console.log('version: ' + this.dataView.getInt16(4, true));\n    console.log('sample rate: ' + this.dataView.getFloat32(8, true));\n    console.log('DSP Enabled: ' + this.dataView.getInt16(12, true));\n  } //#####Utilities#####\n  //little-endian\n\n\n  getMultiBytes(startIdx, count) {\n    var array = [];\n\n    for (var i = count - 1; i > -1; i--) {\n      array.push(this.dataView.getUint8(startIdx + i));\n    }\n\n    return array;\n  }\n\n}\n\nexport default RHSFile;","map":{"version":3,"sources":["C:/Users/tank6/Desktop/React/brainwave_webviewer/src/pages/RHSFile.js"],"names":["RHSFile","constructor","dataView","onProgress","bind","onLoad","onError","load","path","console","log","localPath","request","XMLHttpRequest","open","responseType","onprogress","onload","onerror","overrideMimeType","send","e","percentage","loaded","total","readyState","status","DataView","response","alert","statusText","parse","magicNum","nmValues","getMultiBytes","i","length","toString","getInt16","getFloat32","startIdx","count","array","push","getUint8"],"mappings":"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","sourcesContent":["class RHSFile{\r\n    constructor(){\r\n        this.dataView = null;\r\n        this.onProgress = this.onProgress.bind(this);\r\n        this.onLoad = this.onLoad.bind(this);\r\n        this.onError = this.onError.bind(this);\r\n    }\r\n\r\n    load (path){\r\n        console.log(\"loading \" + path);\r\n\r\n        //Test\r\n        var localPath = \"http://localhost:3001/sample/\" + path;\r\n\r\n        this.request = new XMLHttpRequest();\r\n        this.request.open(\"GET\", localPath, true);\r\n        this.request.responseType = \"arraybuffer\";\r\n        this.request.onprogress = this.onProgress;\r\n        this.request.onload = this.onLoad;\r\n        this.request.onerror = this.onError;\r\n        this.request.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        this.request.send(null);\r\n    }\r\n\r\n    //#####Events#####\r\n    onProgress(e){\r\n        var percentage = e.loaded / e.total * 100;\r\n        console.log(e.loaded + ' / ' + e.total + \" (\" + percentage + '%)');\r\n    }\r\n\r\n    onLoad (e){\r\n        if(this.request.readyState === 4) {\r\n            if(this.request.status === 200 || this.request.status === 0) {\r\n                this.dataView = new DataView(this.request.response);\r\n                console.log('file loaded successfully');\r\n            }\r\n        }\r\n        else{\r\n            alert('Failed to read file');\r\n        }\r\n    }\r\n\r\n    onError (e){\r\n        console.log('Error : ' + this.request.statusText);\r\n    }\r\n\r\n    parse (){\r\n        //Validate Magin-number\r\n        var magicNum = [0xD6, 0x91, 0x27, 0xAC];\r\n        var nmValues = this.getMultiBytes(0, 4);\r\n        for (var i = 0; i < nmValues.length; i++){\r\n            console.log('byte[' + i + '] : ' + nmValues[i].toString(16));\r\n            if (magicNum[i] !== nmValues[i]){\r\n                console.log('Wrong magic number detected');\r\n                return;\r\n            }\r\n        }\r\n        console.log('Magic number found');\r\n\r\n        //Load header\r\n        console.log('version: ' + this.dataView.getInt16(4, true));\r\n        console.log('sample rate: ' + this.dataView.getFloat32(8, true));\r\n        console.log('DSP Enabled: ' + this.dataView.getInt16(12, true));\r\n    }\r\n    \r\n    //#####Utilities#####\r\n    //little-endian\r\n    getMultiBytes(startIdx, count) {\r\n        var array = [];\r\n        for(var i = count - 1; i > -1; i--){\r\n            array.push(this.dataView.getUint8(startIdx + i));\r\n        }\r\n        \r\n        return array;\r\n    }\r\n}\r\n\r\nexport default RHSFile;"]},"metadata":{},"sourceType":"module"}